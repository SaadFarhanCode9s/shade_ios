
// Made With Flow.
//
// DO NOT MODIFY, your changes will be lost when this file is regenerated.
//

import UIKit
import FlowCommoniOS

@IBDesignable
public class ElementView: UIView {
    public struct Defaults {
        public static let size = CGSize(width: 130.16, height: 127.75)
        public static let backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.021)
    }

    public var icon: UIView!
    public var _10242x: UIView!
    public var path: ShapeView!
    public var path_1: ShapeView!
    public var path_2: ShapeView!
    public var path_3: ShapeView!

    public override var intrinsicContentSize: CGSize {
        return Defaults.size
    }

    public override init(frame: CGRect) {
        super.init(frame: frame)
        setup()
    }

    public required init?(coder: NSCoder) {
        super.init(coder: coder)
        setup()
    }

    private func setup() {
        backgroundColor = Defaults.backgroundColor
        clipsToBounds = false
        createViews()
        addSubviews()
        //scale(to: frame.size)
    }

    /// Scales `self` and its subviews to `size`.
    ///
    /// - Parameter size: The size `self` is scaled to.
    ///
    /// UIKit specifies: "In iOS 8.0 and later, the transform property does not affect Auto Layout. Auto layout
    /// calculates a view's alignment rectangle based on its untransformed frame."
    ///
    /// see: https://developer.apple.com/documentation/uikit/uiview/1622459-transform
    ///
    /// If there are any constraints in IB affecting the frame of `self`, this method will have consequences on
    /// layout / rendering. To properly scale an animation, you will have to position the view manually.
    public func scale(to size: CGSize) {
        let x = size.width / Defaults.size.width
        let y = size.height / Defaults.size.height
        transform = CGAffineTransform(scaleX: x, y: y)
    }

    private func createViews() {
        CATransaction.suppressAnimations {
            createIcon()
            create_10242x()
            createPath()
            createPath1()
            createPath2()
            createPath3()
        }
    }

    private func createIcon() {
        icon = UIView(frame: CGRect(x: 65.21, y: 63.27, width: 120.77, height: 120.77))
        icon.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0)
        icon.layer.shadowOffset = CGSize(width: 0, height: 0)
        icon.layer.shadowColor = UIColor.clear.cgColor
        icon.layer.shadowOpacity = 1
        icon.layer.position = CGPoint(x: 65.21, y: 63.27)
        icon.layer.bounds = CGRect(x: 0, y: 0, width: 120.77, height: 120.77)
        icon.layer.masksToBounds = false
    }

    private func create_10242x() {
        _10242x = UIView(frame: CGRect(x: 60.39, y: 60.39, width: 120, height: 120))
        _10242x.backgroundColor = UIColor.clear
        _10242x.layer.shadowOffset = CGSize(width: 0, height: 0)
        _10242x.layer.shadowColor = UIColor.clear.cgColor
        _10242x.layer.shadowOpacity = 1
        _10242x.layer.position = CGPoint(x: 60.39, y: 60.39)
        _10242x.layer.bounds = CGRect(x: 0, y: 0, width: 120, height: 120)
        _10242x.layer.masksToBounds = false
    }

    private func createPath() {
        path = ShapeView(frame: CGRect(x: 70.81, y: 27.59, width: 55.2, height: 55.2))
        path.backgroundColor = UIColor.clear
        path.layer.shadowOffset = CGSize(width: 0, height: 0)
        path.layer.shadowColor = UIColor.clear.cgColor
        path.layer.shadowOpacity = 1
        path.layer.position = CGPoint(x: 70.81, y: 27.59)
        path.layer.bounds = CGRect(x: 0, y: 0, width: 55.2, height: 55.2)
        path.layer.masksToBounds = false
        path.shapeLayer.fillRule = CAShapeLayerFillRule.evenOdd
        path.shapeLayer.fillColor = UIColor(rgb: 0xFFFFFF).cgColor
        path.shapeLayer.lineDashPattern = []
        path.shapeLayer.lineDashPhase = 0
        path.shapeLayer.lineWidth = 0
        path.shapeLayer.path = CGPathCreateWithSVGString("M107.000 173.605 C 95.380 174.757,88.156 186.744,92.415 197.805 C 94.712 203.769,101.494 208.790,107.267 208.799 C 108.501 208.800,109.146 207.872,101.100 217.681 C 97.250 222.374,94.068 226.306,94.029 226.419 C 93.865 226.896,132.488 226.530,134.364 226.037 C 141.901 224.055,147.800 216.988,147.800 209.941 L 147.800 209.066 134.567 208.933 C 127.289 208.860,118.574 208.800,115.200 208.800 L 109.066 208.800 108.933 195.750 C 108.860 188.572,108.800 180.608,108.800 178.050 C 108.800 175.493,108.733 173.413,108.650 173.428 C 108.567 173.443,107.825 173.523,107.000 173.605 M110.200 182.400 L 110.200 191.400 120.100 191.400 L 130.000 191.400 130.000 199.400 L 130.000 207.400 138.923 207.400 L 147.845 207.400 147.712 206.450 C 146.566 198.302,139.145 191.212,131.750 191.201 C 131.228 191.201,130.800 191.155,130.800 191.100 C 130.800 191.045,133.994 187.108,137.897 182.350 C 141.801 177.593,144.996 173.633,144.997 173.550 C 144.999 173.468,137.170 173.400,127.600 173.400 L 110.200 173.400 110.200 182.400 M236.630 183.822 C 236.421 184.305,233.124 191.720,229.303 200.300 C 225.482 208.880,222.310 216.058,222.255 216.250 C 222.161 216.573,222.405 216.600,225.448 216.600 L 228.742 216.600 229.634 214.450 L 230.526 212.300 237.037 212.247 L 243.547 212.195 244.442 214.347 L 245.336 216.500 248.692 216.555 C 251.348 216.598,252.025 216.557,251.942 216.355 C 251.557 215.419,237.145 183.084,237.085 183.022 C 237.044 182.979,236.839 183.339,236.630 183.822 M171.500 183.540 C 166.673 184.180,163.480 187.524,163.517 191.900 C 163.557 196.633,165.921 199.040,173.622 202.191 C 178.176 204.055,179.275 208.486,175.669 210.444 C 172.890 211.954,169.464 211.032,166.386 207.947 L 165.036 206.595 163.293 208.714 C 161.277 211.165,161.279 211.101,163.143 212.804 C 171.942 220.846,185.304 216.158,183.833 205.545 C 183.217 201.102,180.834 198.689,174.400 195.990 C 170.444 194.330,169.602 193.607,169.601 191.865 C 169.598 188.856,174.239 188.323,177.851 190.917 C 178.399 191.311,178.913 191.558,178.994 191.467 C 179.075 191.375,179.844 190.362,180.704 189.216 L 182.267 187.131 181.500 186.488 C 178.740 184.170,175.018 183.073,171.500 183.540 M192.800 200.200 L 192.800 216.600 195.900 216.600 L 199.000 216.600 199.000 210.800 L 199.000 205.000 203.700 205.000 L 208.400 205.000 208.400 210.800 L 208.400 216.600 211.400 216.600 L 214.400 216.600 214.400 200.200 L 214.400 183.800 211.400 183.800 L 208.400 183.800 208.400 191.500 L 208.400 199.200 203.700 199.200 L 199.000 199.200 199.000 191.500 L 199.000 183.800 195.900 183.800 L 192.800 183.800 192.800 200.200 M259.400 200.225 L 259.400 216.651 264.550 216.549 C 270.405 216.433,272.324 216.092,274.971 214.701 C 287.226 208.262,285.295 187.842,272.115 184.504 C 270.058 183.983,267.836 183.800,263.555 183.800 L 259.400 183.800 259.400 200.225 M291.600 200.200 L 291.600 216.600 300.200 216.600 L 308.800 216.600 308.800 213.700 L 308.800 210.800 303.300 210.800 L 297.800 210.800 297.800 207.900 L 297.800 205.000 301.800 205.000 L 305.800 205.000 305.800 202.100 L 305.800 199.200 301.800 199.200 L 297.800 199.200 297.800 194.400 L 297.800 189.600 303.300 189.600 L 308.800 189.600 308.800 186.700 L 308.800 183.800 300.200 183.800 L 291.600 183.800 291.600 200.200 M269.730 189.879 C 280.860 192.843,278.481 210.800,266.958 210.800 L 265.400 210.800 265.400 200.200 L 265.400 189.600 267.050 189.602 C 267.957 189.604,269.163 189.728,269.730 189.879 M239.111 201.708 C 240.172 204.234,241.085 206.413,241.141 206.550 C 241.221 206.745,240.339 206.800,237.121 206.800 C 234.855 206.800,233.000 206.731,233.000 206.646 C 233.000 206.561,233.755 204.693,234.678 202.496 C 235.601 200.298,236.502 198.149,236.681 197.719 C 237.091 196.732,236.868 196.366,239.111 201.708 ")!

    }

    private func createPath1() {
        path_1 = ShapeView(frame: CGRect(x: 49.2, y: 92.41, width: 55.2, height: 55.2))
        path_1.backgroundColor = UIColor.clear
        path_1.layer.shadowOffset = CGSize(width: 0, height: 0)
        path_1.layer.shadowColor = UIColor.clear.cgColor
        path_1.layer.shadowOpacity = 1
        path_1.layer.position = CGPoint(x: 49.2, y: 92.41)
        path_1.layer.bounds = CGRect(x: 0, y: 0, width: 55.2, height: 55.2)
        path_1.layer.masksToBounds = false
        path_1.shapeLayer.fillRule = CAShapeLayerFillRule.evenOdd
        path_1.shapeLayer.fillColor = UIColor(rgb: 0xFFFFFF).cgColor
        path_1.shapeLayer.lineDashPattern = []
        path_1.shapeLayer.lineDashPhase = 0
        path_1.shapeLayer.lineWidth = 0
        path_1.shapeLayer.path = CGPathCreateWithSVGString("M107.000 173.605 C 95.380 174.757,88.156 186.744,92.415 197.805 C 94.712 203.769,101.494 208.790,107.267 208.799 C 108.501 208.800,109.146 207.872,101.100 217.681 C 97.250 222.374,94.068 226.306,94.029 226.419 C 93.865 226.896,132.488 226.530,134.364 226.037 C 141.901 224.055,147.800 216.988,147.800 209.941 L 147.800 209.066 134.567 208.933 C 127.289 208.860,118.574 208.800,115.200 208.800 L 109.066 208.800 108.933 195.750 C 108.860 188.572,108.800 180.608,108.800 178.050 C 108.800 175.493,108.733 173.413,108.650 173.428 C 108.567 173.443,107.825 173.523,107.000 173.605 M110.200 182.400 L 110.200 191.400 120.100 191.400 L 130.000 191.400 130.000 199.400 L 130.000 207.400 138.923 207.400 L 147.845 207.400 147.712 206.450 C 146.566 198.302,139.145 191.212,131.750 191.201 C 131.228 191.201,130.800 191.155,130.800 191.100 C 130.800 191.045,133.994 187.108,137.897 182.350 C 141.801 177.593,144.996 173.633,144.997 173.550 C 144.999 173.468,137.170 173.400,127.600 173.400 L 110.200 173.400 110.200 182.400 M236.630 183.822 C 236.421 184.305,233.124 191.720,229.303 200.300 C 225.482 208.880,222.310 216.058,222.255 216.250 C 222.161 216.573,222.405 216.600,225.448 216.600 L 228.742 216.600 229.634 214.450 L 230.526 212.300 237.037 212.247 L 243.547 212.195 244.442 214.347 L 245.336 216.500 248.692 216.555 C 251.348 216.598,252.025 216.557,251.942 216.355 C 251.557 215.419,237.145 183.084,237.085 183.022 C 237.044 182.979,236.839 183.339,236.630 183.822 M171.500 183.540 C 166.673 184.180,163.480 187.524,163.517 191.900 C 163.557 196.633,165.921 199.040,173.622 202.191 C 178.176 204.055,179.275 208.486,175.669 210.444 C 172.890 211.954,169.464 211.032,166.386 207.947 L 165.036 206.595 163.293 208.714 C 161.277 211.165,161.279 211.101,163.143 212.804 C 171.942 220.846,185.304 216.158,183.833 205.545 C 183.217 201.102,180.834 198.689,174.400 195.990 C 170.444 194.330,169.602 193.607,169.601 191.865 C 169.598 188.856,174.239 188.323,177.851 190.917 C 178.399 191.311,178.913 191.558,178.994 191.467 C 179.075 191.375,179.844 190.362,180.704 189.216 L 182.267 187.131 181.500 186.488 C 178.740 184.170,175.018 183.073,171.500 183.540 M192.800 200.200 L 192.800 216.600 195.900 216.600 L 199.000 216.600 199.000 210.800 L 199.000 205.000 203.700 205.000 L 208.400 205.000 208.400 210.800 L 208.400 216.600 211.400 216.600 L 214.400 216.600 214.400 200.200 L 214.400 183.800 211.400 183.800 L 208.400 183.800 208.400 191.500 L 208.400 199.200 203.700 199.200 L 199.000 199.200 199.000 191.500 L 199.000 183.800 195.900 183.800 L 192.800 183.800 192.800 200.200 M259.400 200.225 L 259.400 216.651 264.550 216.549 C 270.405 216.433,272.324 216.092,274.971 214.701 C 287.226 208.262,285.295 187.842,272.115 184.504 C 270.058 183.983,267.836 183.800,263.555 183.800 L 259.400 183.800 259.400 200.225 M291.600 200.200 L 291.600 216.600 300.200 216.600 L 308.800 216.600 308.800 213.700 L 308.800 210.800 303.300 210.800 L 297.800 210.800 297.800 207.900 L 297.800 205.000 301.800 205.000 L 305.800 205.000 305.800 202.100 L 305.800 199.200 301.800 199.200 L 297.800 199.200 297.800 194.400 L 297.800 189.600 303.300 189.600 L 308.800 189.600 308.800 186.700 L 308.800 183.800 300.200 183.800 L 291.600 183.800 291.600 200.200 M269.730 189.879 C 280.860 192.843,278.481 210.800,266.958 210.800 L 265.400 210.800 265.400 200.200 L 265.400 189.600 267.050 189.602 C 267.957 189.604,269.163 189.728,269.730 189.879 M239.111 201.708 C 240.172 204.234,241.085 206.413,241.141 206.550 C 241.221 206.745,240.339 206.800,237.121 206.800 C 234.855 206.800,233.000 206.731,233.000 206.646 C 233.000 206.561,233.755 204.693,234.678 202.496 C 235.601 200.298,236.502 198.149,236.681 197.719 C 237.091 196.732,236.868 196.366,239.111 201.708 ")!

    }

    private func createPath2() {
        path_2 = ShapeView(frame: CGRect(x: 27.59, y: 49.2, width: 55.2, height: 55.2))
        path_2.backgroundColor = UIColor.clear
        path_2.layer.shadowOffset = CGSize(width: 0, height: 0)
        path_2.layer.shadowColor = UIColor.clear.cgColor
        path_2.layer.shadowOpacity = 1
        path_2.layer.position = CGPoint(x: 27.59, y: 49.2)
        path_2.layer.bounds = CGRect(x: 0, y: 0, width: 55.2, height: 55.2)
        path_2.layer.masksToBounds = false
        path_2.shapeLayer.fillRule = CAShapeLayerFillRule.evenOdd
        path_2.shapeLayer.fillColor = UIColor(rgb: 0xFFFFFF).cgColor
        path_2.shapeLayer.lineDashPattern = []
        path_2.shapeLayer.lineDashPhase = 0
        path_2.shapeLayer.lineWidth = 0
        path_2.shapeLayer.path = CGPathCreateWithSVGString("M107.000 173.605 C 95.380 174.757,88.156 186.744,92.415 197.805 C 94.712 203.769,101.494 208.790,107.267 208.799 C 108.501 208.800,109.146 207.872,101.100 217.681 C 97.250 222.374,94.068 226.306,94.029 226.419 C 93.865 226.896,132.488 226.530,134.364 226.037 C 141.901 224.055,147.800 216.988,147.800 209.941 L 147.800 209.066 134.567 208.933 C 127.289 208.860,118.574 208.800,115.200 208.800 L 109.066 208.800 108.933 195.750 C 108.860 188.572,108.800 180.608,108.800 178.050 C 108.800 175.493,108.733 173.413,108.650 173.428 C 108.567 173.443,107.825 173.523,107.000 173.605 M110.200 182.400 L 110.200 191.400 120.100 191.400 L 130.000 191.400 130.000 199.400 L 130.000 207.400 138.923 207.400 L 147.845 207.400 147.712 206.450 C 146.566 198.302,139.145 191.212,131.750 191.201 C 131.228 191.201,130.800 191.155,130.800 191.100 C 130.800 191.045,133.994 187.108,137.897 182.350 C 141.801 177.593,144.996 173.633,144.997 173.550 C 144.999 173.468,137.170 173.400,127.600 173.400 L 110.200 173.400 110.200 182.400 M236.630 183.822 C 236.421 184.305,233.124 191.720,229.303 200.300 C 225.482 208.880,222.310 216.058,222.255 216.250 C 222.161 216.573,222.405 216.600,225.448 216.600 L 228.742 216.600 229.634 214.450 L 230.526 212.300 237.037 212.247 L 243.547 212.195 244.442 214.347 L 245.336 216.500 248.692 216.555 C 251.348 216.598,252.025 216.557,251.942 216.355 C 251.557 215.419,237.145 183.084,237.085 183.022 C 237.044 182.979,236.839 183.339,236.630 183.822 M171.500 183.540 C 166.673 184.180,163.480 187.524,163.517 191.900 C 163.557 196.633,165.921 199.040,173.622 202.191 C 178.176 204.055,179.275 208.486,175.669 210.444 C 172.890 211.954,169.464 211.032,166.386 207.947 L 165.036 206.595 163.293 208.714 C 161.277 211.165,161.279 211.101,163.143 212.804 C 171.942 220.846,185.304 216.158,183.833 205.545 C 183.217 201.102,180.834 198.689,174.400 195.990 C 170.444 194.330,169.602 193.607,169.601 191.865 C 169.598 188.856,174.239 188.323,177.851 190.917 C 178.399 191.311,178.913 191.558,178.994 191.467 C 179.075 191.375,179.844 190.362,180.704 189.216 L 182.267 187.131 181.500 186.488 C 178.740 184.170,175.018 183.073,171.500 183.540 M192.800 200.200 L 192.800 216.600 195.900 216.600 L 199.000 216.600 199.000 210.800 L 199.000 205.000 203.700 205.000 L 208.400 205.000 208.400 210.800 L 208.400 216.600 211.400 216.600 L 214.400 216.600 214.400 200.200 L 214.400 183.800 211.400 183.800 L 208.400 183.800 208.400 191.500 L 208.400 199.200 203.700 199.200 L 199.000 199.200 199.000 191.500 L 199.000 183.800 195.900 183.800 L 192.800 183.800 192.800 200.200 M259.400 200.225 L 259.400 216.651 264.550 216.549 C 270.405 216.433,272.324 216.092,274.971 214.701 C 287.226 208.262,285.295 187.842,272.115 184.504 C 270.058 183.983,267.836 183.800,263.555 183.800 L 259.400 183.800 259.400 200.225 M291.600 200.200 L 291.600 216.600 300.200 216.600 L 308.800 216.600 308.800 213.700 L 308.800 210.800 303.300 210.800 L 297.800 210.800 297.800 207.900 L 297.800 205.000 301.800 205.000 L 305.800 205.000 305.800 202.100 L 305.800 199.200 301.800 199.200 L 297.800 199.200 297.800 194.400 L 297.800 189.600 303.300 189.600 L 308.800 189.600 308.800 186.700 L 308.800 183.800 300.200 183.800 L 291.600 183.800 291.600 200.200 M269.730 189.879 C 280.860 192.843,278.481 210.800,266.958 210.800 L 265.400 210.800 265.400 200.200 L 265.400 189.600 267.050 189.602 C 267.957 189.604,269.163 189.728,269.730 189.879 M239.111 201.708 C 240.172 204.234,241.085 206.413,241.141 206.550 C 241.221 206.745,240.339 206.800,237.121 206.800 C 234.855 206.800,233.000 206.731,233.000 206.646 C 233.000 206.561,233.755 204.693,234.678 202.496 C 235.601 200.298,236.502 198.149,236.681 197.719 C 237.091 196.732,236.868 196.366,239.111 201.708 ")!

    }

    private func createPath3() {
        path_3 = ShapeView(frame: CGRect(x: 92.41, y: 70.81, width: 55.2, height: 55.2))
        path_3.backgroundColor = UIColor.clear
        path_3.layer.shadowOffset = CGSize(width: 0, height: 0)
        path_3.layer.shadowColor = UIColor.clear.cgColor
        path_3.layer.shadowOpacity = 1
        path_3.layer.position = CGPoint(x: 92.41, y: 70.81)
        path_3.layer.bounds = CGRect(x: 0, y: 0, width: 55.2, height: 55.2)
        path_3.layer.masksToBounds = false
        path_3.shapeLayer.fillRule = CAShapeLayerFillRule.evenOdd
        path_3.shapeLayer.fillColor = UIColor(rgb: 0xFFFFFF).cgColor
        path_3.shapeLayer.lineDashPattern = []
        path_3.shapeLayer.lineDashPhase = 0
        path_3.shapeLayer.lineWidth = 0
        path_3.shapeLayer.path = CGPathCreateWithSVGString("M107.000 173.605 C 95.380 174.757,88.156 186.744,92.415 197.805 C 94.712 203.769,101.494 208.790,107.267 208.799 C 108.501 208.800,109.146 207.872,101.100 217.681 C 97.250 222.374,94.068 226.306,94.029 226.419 C 93.865 226.896,132.488 226.530,134.364 226.037 C 141.901 224.055,147.800 216.988,147.800 209.941 L 147.800 209.066 134.567 208.933 C 127.289 208.860,118.574 208.800,115.200 208.800 L 109.066 208.800 108.933 195.750 C 108.860 188.572,108.800 180.608,108.800 178.050 C 108.800 175.493,108.733 173.413,108.650 173.428 C 108.567 173.443,107.825 173.523,107.000 173.605 M110.200 182.400 L 110.200 191.400 120.100 191.400 L 130.000 191.400 130.000 199.400 L 130.000 207.400 138.923 207.400 L 147.845 207.400 147.712 206.450 C 146.566 198.302,139.145 191.212,131.750 191.201 C 131.228 191.201,130.800 191.155,130.800 191.100 C 130.800 191.045,133.994 187.108,137.897 182.350 C 141.801 177.593,144.996 173.633,144.997 173.550 C 144.999 173.468,137.170 173.400,127.600 173.400 L 110.200 173.400 110.200 182.400 M236.630 183.822 C 236.421 184.305,233.124 191.720,229.303 200.300 C 225.482 208.880,222.310 216.058,222.255 216.250 C 222.161 216.573,222.405 216.600,225.448 216.600 L 228.742 216.600 229.634 214.450 L 230.526 212.300 237.037 212.247 L 243.547 212.195 244.442 214.347 L 245.336 216.500 248.692 216.555 C 251.348 216.598,252.025 216.557,251.942 216.355 C 251.557 215.419,237.145 183.084,237.085 183.022 C 237.044 182.979,236.839 183.339,236.630 183.822 M171.500 183.540 C 166.673 184.180,163.480 187.524,163.517 191.900 C 163.557 196.633,165.921 199.040,173.622 202.191 C 178.176 204.055,179.275 208.486,175.669 210.444 C 172.890 211.954,169.464 211.032,166.386 207.947 L 165.036 206.595 163.293 208.714 C 161.277 211.165,161.279 211.101,163.143 212.804 C 171.942 220.846,185.304 216.158,183.833 205.545 C 183.217 201.102,180.834 198.689,174.400 195.990 C 170.444 194.330,169.602 193.607,169.601 191.865 C 169.598 188.856,174.239 188.323,177.851 190.917 C 178.399 191.311,178.913 191.558,178.994 191.467 C 179.075 191.375,179.844 190.362,180.704 189.216 L 182.267 187.131 181.500 186.488 C 178.740 184.170,175.018 183.073,171.500 183.540 M192.800 200.200 L 192.800 216.600 195.900 216.600 L 199.000 216.600 199.000 210.800 L 199.000 205.000 203.700 205.000 L 208.400 205.000 208.400 210.800 L 208.400 216.600 211.400 216.600 L 214.400 216.600 214.400 200.200 L 214.400 183.800 211.400 183.800 L 208.400 183.800 208.400 191.500 L 208.400 199.200 203.700 199.200 L 199.000 199.200 199.000 191.500 L 199.000 183.800 195.900 183.800 L 192.800 183.800 192.800 200.200 M259.400 200.225 L 259.400 216.651 264.550 216.549 C 270.405 216.433,272.324 216.092,274.971 214.701 C 287.226 208.262,285.295 187.842,272.115 184.504 C 270.058 183.983,267.836 183.800,263.555 183.800 L 259.400 183.800 259.400 200.225 M291.600 200.200 L 291.600 216.600 300.200 216.600 L 308.800 216.600 308.800 213.700 L 308.800 210.800 303.300 210.800 L 297.800 210.800 297.800 207.900 L 297.800 205.000 301.800 205.000 L 305.800 205.000 305.800 202.100 L 305.800 199.200 301.800 199.200 L 297.800 199.200 297.800 194.400 L 297.800 189.600 303.300 189.600 L 308.800 189.600 308.800 186.700 L 308.800 183.800 300.200 183.800 L 291.600 183.800 291.600 200.200 M269.730 189.879 C 280.860 192.843,278.481 210.800,266.958 210.800 L 265.400 210.800 265.400 200.200 L 265.400 189.600 267.050 189.602 C 267.957 189.604,269.163 189.728,269.730 189.879 M239.111 201.708 C 240.172 204.234,241.085 206.413,241.141 206.550 C 241.221 206.745,240.339 206.800,237.121 206.800 C 234.855 206.800,233.000 206.731,233.000 206.646 C 233.000 206.561,233.755 204.693,234.678 202.496 C 235.601 200.298,236.502 198.149,236.681 197.719 C 237.091 196.732,236.868 196.366,239.111 201.708 ")!

    }

    private func addSubviews() {
        _10242x.addSubview(path)
        _10242x.addSubview(path_1)
        _10242x.addSubview(path_2)
        _10242x.addSubview(path_3)
        icon.addSubview(_10242x)
        addSubview(icon)
    }
}
